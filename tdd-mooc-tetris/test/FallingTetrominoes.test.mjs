import { expect } from "chai";
import { fallToBottom } from "./utils.mjs";
import { TetrominoArika } from "../src/TetrominoArika.mjs";
import { Board2 } from "../src/Board2.mjs";

describe("Falling tetrominoes", () => {
  let board;
  beforeEach(() => {
    board = new Board2(10, 6);
  });

  describe("The T shape", () => {
    it("starts from the top middle", () => {
      board.drop(TetrominoArika.T_SHAPE);

      expect(board.toString()).to.equalShape(
        `...TTT....
         ....T.....
         ..........
         ..........
         ..........
         ..........`
      );
    });

    it("stop when they hit the bottom", () => {
      board.drop(TetrominoArika.T_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ..........
         ..........
         ...TTT....
         ....T.....`
      );
    });

    it("stop when they land on another block", () => {
      board.drop(TetrominoArika.T_SHAPE);
      fallToBottom(board);
      board.drop(TetrominoArika.T_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ...TTT....
         ....T.....
         ...TTT....
         ....T.....`
      );
    });
  })

  describe("The I shape", () => {
    it("starts from the top middle", () => {
      board.drop(TetrominoArika.I_SHAPE);

      expect(board.toString()).to.equalShape(
        `...IIII...
         ..........
         ..........
         ..........
         ..........
         ..........`
      );
    });

    it("stop when they hit the bottom", () => {
      board.drop(TetrominoArika.I_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ..........
         ..........
         ..........
         ...IIII...`
      );
    });

    it("stop when they land on another block", () => {
      board.drop(TetrominoArika.I_SHAPE);
      fallToBottom(board);
      board.drop(TetrominoArika.I_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ..........
         ..........
         ...IIII...
         ...IIII...`
      );
    });
  })

  describe("The O shape", () => {
    it("starts from the top middle", () => {
      board.drop(TetrominoArika.O_SHAPE);

      expect(board.toString()).to.equalShape(
        `....OO....
         ....OO....
         ..........
         ..........
         ..........
         ..........`
      );
    });

    it("stop when they hit the bottom", () => {
      board.drop(TetrominoArika.O_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ..........
         ..........
         ....OO....
         ....OO....`
      );
    });

    it("stop when they land on another block", () => {
      board.drop(TetrominoArika.O_SHAPE);
      fallToBottom(board);
      board.drop(TetrominoArika.O_SHAPE);
      fallToBottom(board);

      expect(board.toString()).to.equalShape(
        `..........
         ..........
         ....OO....
         ....OO....
         ....OO....
         ....OO....`
      );
    });
  })
});
